syntax = "proto3";

package kaisui.transport;

// Envelope for all messages between Haskell and Rust
message Envelope {
  oneof message {
    ConnectionRequest connection_request = 1;
    ConnectionResponse connection_response = 2;
    DataMessage data_message = 3;
    CloseConnection close_connection = 4;
    CloseEndPoint close_endpoint = 5;
  }
}

// Request to establish a new connection
message ConnectionRequest {
  string from_endpoint = 1;
  uint32 reliability = 2;  // 0=Unreliable, 1=ReliableOrdered, 2=ReliableUnordered
  string connection_id = 3;
}

// Response to connection request
message ConnectionResponse {
  string connection_id = 1;
  oneof result {
    string error = 2;
    string endpoint_address = 3;
  }
}

// Data message
message DataMessage {
  string connection_id = 1;
  bytes payload = 2;
}

// Close a specific connection
message CloseConnection {
  string connection_id = 1;
}

// Close an endpoint
message CloseEndPoint {
  string endpoint_id = 1;
}
